<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>puzzle | Joshua J. Daymude</title>
    <link>https://jdaymude.github.io/tags/puzzle/</link>
      <atom:link href="https://jdaymude.github.io/tags/puzzle/index.xml" rel="self" type="application/rss+xml" />
    <description>puzzle</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Joshua J. Daymude</copyright><lastBuildDate>Mon, 06 Jan 2020 13:00:00 -0700</lastBuildDate>
    <image>
      <url>https://jdaymude.github.io/images/logo_hu1dc8deb1865675db905a286e8af9308b_16380_300x300_fit_lanczos_2.png</url>
      <title>puzzle</title>
      <link>https://jdaymude.github.io/tags/puzzle/</link>
    </image>
    
    <item>
      <title>Solving the Molecube by Reduction</title>
      <link>https://jdaymude.github.io/post/solving-the-molecube-by-reduction/</link>
      <pubDate>Mon, 06 Jan 2020 13:00:00 -0700</pubDate>
      <guid>https://jdaymude.github.io/post/solving-the-molecube-by-reduction/</guid>
      <description>&lt;p&gt;My sister-in-law surprised me with a 
&lt;a href=&#34;http://www.recenttoys.com/meffert-molecube-twister-puzzle/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Molecube&lt;/a&gt; for Christmas, which combines the logic of a Sudoku puzzle with the mechanics of a Rubik&amp;rsquo;s cube. Each ball on the Molecube is one of nine colors, and the goal is to reconfigure a shuffled Molecube so each of its faces has all nine colors on it.&lt;/p&gt;















&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;http://www.recenttoys.com/wp-content/uploads/2019/11/meffert-molecube-twister-puzzle-1200x900.jpg&#34; &gt;


  &lt;img src=&#34;http://www.recenttoys.com/wp-content/uploads/2019/11/meffert-molecube-twister-puzzle-1200x900.jpg&#34; alt=&#34;&#34; width=&#34;65%&#34; &gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;It turns out that solving the Molecube is a wonderful exercise in what computer scientists call &lt;em&gt;reduction&lt;/em&gt;, which involves transforming a problem we don&amp;rsquo;t know how to solve into one that we do, solving that version, and then translating the solution back into the original problem. In this post, I&amp;rsquo;ll give a reader-friendly primer on reduction, outline a reduction from the Molecube to the Rubik&amp;rsquo;s cube, and then wrap up by solving the Molecube with a standard Rubik&amp;rsquo;s cube algorithm.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re interested in solving the Molecube yourself (and perhaps you&amp;rsquo;re here looking for hints), I&amp;rsquo;ve created a &lt;a href=&#34;https://jdaymude.github.io/files/molecube_worksheet.pdf&#34; target=&#34;_blank&#34;&gt;worksheet&lt;/a&gt; you can use and will point out when you should skip ahead in the post so as to avoid spoiling this delightful puzzle.&lt;/p&gt;
&lt;h2 id=&#34;reduction-there-and-back-again&#34;&gt;Reduction: There and Back Again&lt;/h2&gt;
&lt;p&gt;Say we have a problem $A$ that we don&amp;rsquo;t know how to solve and another problem $B$ that we do know how to solve. Said another way, we have an &amp;ldquo;algorithm&amp;rdquo; that can answer any question asked in the form of problem $B$, but we have no such algorithm for problem $A$ questions. The whole idea of reduction is to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Take a problem $A$ question (which we don&amp;rsquo;t know how to answer) and &amp;ldquo;transform&amp;rdquo; it into a problem $B$ question (which we do know how to answer).&lt;/li&gt;
&lt;li&gt;Use the &amp;ldquo;algorithm&amp;rdquo; for problem $B$ questions to get an answer for our transformed problem $A$ question.&lt;/li&gt;
&lt;li&gt;Translate the algorithm&amp;rsquo;s answer back into the context of problem $A$.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That&amp;rsquo;s it. We use a known algorithm (for problem $B$) as our workhorse for a new and unknown problem (problem $A$), and out pop solutions for our unknown problem! This powerful technique underlies almost all of theoretical computer science, giving us a tool to relate difficult problems to one another (as opposed to treating every new problem as something totally unique). I recently heard a high-profile professor in Computer Science claim that reduction is one of only two truly new ideas our discipline has ever contributed to science (though she called this idea &amp;ldquo;hierarchy&amp;rdquo;, with the other idea being &amp;ldquo;abstraction&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;A natural question to ask next would be if all problems can be tackled with reduction. Unfortunately, in practice, finding the right translation between a pair of problems (Step 1, above) can be prohibitively difficult. Reduction is easiest when the two problems seem to have an obvious relationship we can exploit, which brings us to the Molecube and the Rubik&amp;rsquo;s cube.&lt;/p&gt;
&lt;h2 id=&#34;a-sudoku-like-transformation&#34;&gt;A Sudoku-Like Transformation&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s difficult to overstate how much of the Molecube&amp;rsquo;s solution is given away in its advertising as &amp;ldquo;Sudoku + Rubik&amp;rsquo;s cube&amp;rdquo;. My solution will treat this equation quite literally, starting with a transformation that relies on a Sudoku puzzle. I found this transformation by asking two simple questions:&lt;/p&gt;
&lt;img src=&#34;shuffled.png&#34; style=&#34;display: inline-block; width: 48%; margin-right: 2%&#34;/&gt;
&lt;img src=&#34;rubiks-cube.jpg&#34; style=&#34;display: inline-block; width: 46%; margin-left: 2%&#34;/&gt;
&lt;ol&gt;
&lt;li&gt;How are the Molecube and the Rubik&amp;rsquo;s cube similar?&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;They&amp;rsquo;re both 3x3x3 cubes, meaning they both have 6 faces, 8 corners, and 12 edges. This totals 26 balls (on the Molecube) or blocks (on the Rubik&amp;rsquo;s cube).&lt;/li&gt;
&lt;li&gt;Their physical mechanics (spinning, twisting, etc.) are identical.&lt;/li&gt;
&lt;li&gt;Their goals are, in a way, also identical: from a shuffled configuration, reach a goal configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;How are the Molecube and the Rubik&amp;rsquo;s cube different?&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Their goal configurations are different: the Molecube wants one ball of each color on each face, while the Rubik&amp;rsquo;s cube wants each face to be all the same color.&lt;/li&gt;
&lt;li&gt;There are nine colors on the Molecube, but only six on the Rubik&amp;rsquo;s cube.&lt;/li&gt;
&lt;li&gt;A block on the Rubik&amp;rsquo;s cube has 1–3 colors (one for each face it touches), while a ball on the Molecube is the same color on all &amp;ldquo;sides&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The similarities hint at a solution: though the goal configurations are different, the cubes&amp;rsquo; structures and mechanics are the same. So if I find a goal configuration for the Molecube, I can use the Rubik&amp;rsquo;s cube algorithm to handle all the tricky rearranging involved in actually getting there.&lt;/p&gt;
&lt;p&gt;If that&amp;rsquo;s enough of a framework for you to attempt your own solution, feel free to download the &lt;a href=&#34;https://jdaymude.github.io/files/molecube_worksheet.pdf&#34; target=&#34;_blank&#34;&gt;worksheet&lt;/a&gt; I&amp;rsquo;ve created to help you visualize the Molecube as a Sudoku puzzle (with colors instead of numbers). You&amp;rsquo;ll want to stop reading here and come back once you&amp;rsquo;ve completed a goal configuration or if you&amp;rsquo;re stuck and need hints.&lt;/p&gt;
&lt;p&gt;Speaking of hints, the best way to unlock this tricky Sudoku-like color puzzle (getting one color on each face) is to study the Molecube&amp;rsquo;s colors and structure. I asked myself the following questions (which culminated in the table at the top of the &lt;a href=&#34;https://jdaymude.github.io/files/molecube_worksheet.pdf&#34; target=&#34;_blank&#34;&gt;worksheet&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How does the Molecube fit nine colors on a cube with 26 balls?&lt;/li&gt;
&lt;li&gt;How are the colors distributed over the different types of balls (centers, corners, and edges)?&lt;/li&gt;
&lt;li&gt;Are there any patterns that appear when trying to place balls of a certain color so it appears on each face exactly once?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The answers to these questions are revealing. There are three balls of each color, with the important exception of Green, which only has two. Further, Green is the unique color that is on two corners. Red and Purple are each on three edges, and the remaining six colors (White, Black, Orange, Yellow, Light Blue, and Blue) are each on one center, one corner, and one edge. This information — after some careful thinking — reveals the patterns we need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As in the Rubik&amp;rsquo;s cube, centers opposite one another are always opposite one another (i.e., Black is always opposite White, Orange is always opposite Yellow, and Blue is always opposite Light Blue).&lt;/li&gt;
&lt;li&gt;The only way the two Green corners avoid being on the same face is if they&amp;rsquo;re opposite one another (e.g., upper-right-back and lower-left-front).&lt;/li&gt;
&lt;li&gt;The only way the three Red (or Purple) edges avoid being on the same face is if a Red (or Purple) appears exactly once in each &amp;ldquo;middle band&amp;rdquo; (shown below, left). So each middle band contains exactly one Red and one Purple.&lt;/li&gt;
&lt;li&gt;For any of the remaining colors, (e.g., Blue) there is a center of that color. This blocks the corner of that color from being in the same &amp;ldquo;layer&amp;rdquo;, so the corner must go in the layer opposite the center (shown below, right). Once the position of the corner is fixed, there is only one position the edge of that color can go.&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;rule1.png&#34; style=&#34;display: inline-block; width: 47%; margin-right: 2%&#34;/&gt;
&lt;img src=&#34;rule2.png&#34; style=&#34;display: inline-block; width: 47%; margin-left: 2%&#34;/&gt;
&lt;p&gt;Using these rules and some trial and error, I found the solution shown below, also detailed in the &lt;a href=&#34;https://jdaymude.github.io/files/molecube_worksheet_solved.pdf&#34; target=&#34;_blank&#34;&gt;worksheet solution&lt;/a&gt;. (An interesting aside: I don&amp;rsquo;t know if this is the only solution, but any solution works for the reduction). To relate the Molecube solution to the Rubik&amp;rsquo;s cube solution, we simply treat each 3×3 face on the Molecube as a &amp;ldquo;color&amp;rdquo; on the Rubik&amp;rsquo;s cube. (For example, the Black ball at the top-left of the White-center face becomes the Red-White-Green block on the Rubik&amp;rsquo;s cube). This completes the transformation step of the reduction.&lt;/p&gt;
&lt;img src=&#34;sudoku-soln.jpg&#34; style=&#34;display: inline-block; width: 47%; margin-right: 2%&#34;/&gt;
&lt;img src=&#34;rubiks-mapping.jpg&#34; style=&#34;display: inline-block; width: 47%; margin-left: 2%&#34;/&gt;
&lt;h2 id=&#34;rubik-ing-the-molecube&#34;&gt;Rubik-ing the Molecube&lt;/h2&gt;
&lt;p&gt;With the difficult transformation step out of the way, the rest of the reduction is easy. You can solve any shuffled Molecube just like you would a Rubik&amp;rsquo;s cube (assuming you know how to do that), but instead of aiming to have faces with all the same color, you aim to build the goal configuration we got from the transformation (above, left). To make this easier for me to visualize, I made a 3D rendering of my solution (front view on the left, back view on the right).&lt;/p&gt;
&lt;img src=&#34;featured.png&#34; style=&#34;display: inline-block; width: 47%; margin-right: 2%&#34;/&gt;
&lt;img src=&#34;solved-back.png&#34; style=&#34;display: inline-block; width: 47%; margin-left: 2%&#34;/&gt;
&lt;p&gt;I was pleasantly surprised at how much Rubik&amp;rsquo;s cube muscle memory I still had from speedcubing in junior high (though if you need a refresher, I found 
&lt;a href=&#34;https://hobbylark.com/puzzles/Rubik-Cube-Algorithms&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this tutorial&lt;/a&gt; helpful). Interestingly, some of the steps in the Rubik&amp;rsquo;s cube &amp;ldquo;algorithm&amp;rdquo; are unnecessary for the Molecube. Remember the earlier observation that the Molecube&amp;rsquo;s balls are each a single color while the Rubik&amp;rsquo;s cube blocks can have 1–3 colors each? This means that the Molecube doesn&amp;rsquo;t care if its balls are rotated &amp;ldquo;in place&amp;rdquo;, though this is a problem for the Rubik&amp;rsquo;s cube (see the example below). So any steps in the Rubik&amp;rsquo;s cube algorithm that are meant to fix things like this can be skipped entirely.&lt;/p&gt;















&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://usercontent2.hubstatic.com/14101285_f1024.jpg&#34; &gt;


  &lt;img src=&#34;https://usercontent2.hubstatic.com/14101285_f1024.jpg&#34; alt=&#34;&#34; width=&#34;90%&#34; &gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;h2 id=&#34;but-does-it-work&#34;&gt;But Does It Work?&lt;/h2&gt;
&lt;p&gt;To show that the reduction approach not only works but is also reasonably fast, here&amp;rsquo;s me solving the Molecube in just under 2 minutes.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/QRtTLvtXWrQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br/&gt;
&lt;p&gt;There are a &lt;em&gt;lot&lt;/em&gt; of Rubik&amp;rsquo;s cube-inspired puzzles these days (for example, the 
&lt;a href=&#34;http://www.recenttoys.com/meffert-ghost-cube-twister-puzzle/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ghost Cube&lt;/a&gt; and the 
&lt;a href=&#34;http://www.recenttoys.com/meffert-pyraminx-twister-puzzle/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pyraminx&lt;/a&gt;). But solving the Molecube by reduction makes me wonder just how many of these new puzzles share a similar relationship to the original Rubik&amp;rsquo;s cube. If these relationships exist, we&amp;rsquo;d find that these new puzzles aren&amp;rsquo;t really new at all; they&amp;rsquo;re just an old puzzle we know how to solve, but with new names and nice packaging.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hidden My Game By Mom!</title>
      <link>https://jdaymude.github.io/review/videogame-hidden-my-game-by-mom/</link>
      <pubDate>Sun, 15 Dec 2019 12:00:00 -0700</pubDate>
      <guid>https://jdaymude.github.io/review/videogame-hidden-my-game-by-mom/</guid>
      <description>&lt;p&gt;&lt;em&gt;Hidden My Game By Mom&lt;/em&gt; is a quick, quirky, and delightful little puzzle starring a boy addicted to his handheld gaming device and his mother&amp;rsquo;s attempts to hide it from him in increasingly bizarre ways. You, the real-life gamer that you are, vicariously strike back against the parental anti-game tyranny you may or may not have actually experienced by interacting with the scene to find this boy&amp;rsquo;s game. The core gameplay revolves around collecting items and using them in clever and silly ways to reveal where the boy&amp;rsquo;s game was hidden, but this comes with a catch: Mom is also hiding in nearly every level, often in more absurd places than the game. Find the game, win the level; find Mom, you&amp;rsquo;re busted.&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jdaymude.github.io/review/videogame-hidden-my-game-by-mom/lady_game_hucbecac82dffa2954be84ac6a98c31075_55374_2000x2000_fit_q90_lanczos.jpg&#34; &gt;


  &lt;img data-src=&#34;https://jdaymude.github.io/review/videogame-hidden-my-game-by-mom/lady_game_hucbecac82dffa2954be84ac6a98c31075_55374_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;735&#34; height=&#34;474&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;This simple hidden object puzzle takes on another level of meaning when moving past the zaniness of the &lt;em&gt;what&lt;/em&gt; and moving into the relational &lt;em&gt;why&lt;/em&gt;. &lt;em&gt;Hidden My Game By Mom&lt;/em&gt; proposes the simple premise of Mom as antagonist, someone to be outsmarted and evaded. But as we progress, it&amp;rsquo;s difficult to leave the boy&amp;rsquo;s motives unquestioned. At one point, we distract the boy&amp;rsquo;s older sister from doing her homework so our boy can get back to his gaming. In another level, the boy digs through literal poop to be reunited with his cherished handheld. This is a caricature of both the boy&amp;rsquo;s love for his game and the lengths his mom would go to stop him, to be sure, but something rings true about his mom&amp;rsquo;s implicit concern that this all might be getting out of hand. And after a surprising and emotional gut punch of a finale, no amount of broken English in the UI can hide &lt;em&gt;Hidden My Game By Mom&lt;/em&gt;&amp;lsquo;s core message.&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jdaymude.github.io/review/videogame-hidden-my-game-by-mom/giraffe_hud367643ae2fb92fc2e6db2eaeec3a712_86123_2000x2000_fit_q90_lanczos.jpg&#34; &gt;


  &lt;img data-src=&#34;https://jdaymude.github.io/review/videogame-hidden-my-game-by-mom/giraffe_hud367643ae2fb92fc2e6db2eaeec3a712_86123_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;743&#34; height=&#34;874&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;A parent&amp;rsquo;s love might come out as riding a giraffe&amp;rsquo;s head or feeding an elephant your gaming device, but it&amp;rsquo;s love all the same. We can argue with the methods and the logic, but (at some level) we should try to appreciate that they were doing the best they knew how.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tap! Dig! My Museum!</title>
      <link>https://jdaymude.github.io/review/videogame-tap-dig-my-museum/</link>
      <pubDate>Tue, 03 Dec 2019 12:00:00 -0700</pubDate>
      <guid>https://jdaymude.github.io/review/videogame-tap-dig-my-museum/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s difficult to overstate just how much of &lt;em&gt;Tap! Dig! My Museum!&lt;/em&gt; is in its title. In this free mobile idler, you play as an aspiring dinosaur archaeologist and newfound owner of a museum in disrepair. By enticing patrons to your museum, you collect the coins they drop as they react to your dinosaurs. In turn, you invest your cash into archaeological digs — where you tap away at sand to uncover hidden bones — and upgrades which make said digs easier. The more dinosaurs you complete, the more people come flooding in to see them, which in turn leads to more money, which in turn leads to more dinosaurs. You get the idea.&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jdaymude.github.io/review/videogame-tap-dig-my-museum/museum_hu258252aad6c4944f58e890ada42e6efb_245093_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://jdaymude.github.io/review/videogame-tap-dig-my-museum/museum_hu258252aad6c4944f58e890ada42e6efb_245093_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;745&#34; height=&#34;1074&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Tap! Dig! My Museum!&lt;/em&gt; is a perfect free game in the sense that it never artificially handicaps the player&amp;rsquo;s progress. If you want to keep unearthing dinosaur fossils, nobody&amp;rsquo;s stopping you. Mandatory ads are never longer than 15 seconds, and ads that grant bonuses (like a school bus that brings a swarm of visitors to boost your income) are never longer than 30. As of version 1.3.0 (which added a second floor to the museum and oceanic dinos!), the whole experience only took about 18 hours to complete — ads and plenty of AFK coin collecting included. After being burned by many a &amp;ldquo;free-to-play&amp;rdquo; mobile game, it was nice to actually finish one fair and square.&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jdaymude.github.io/review/videogame-tap-dig-my-museum/level_hu64f74bbabc863a7488cd82b6207ef236_101245_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://jdaymude.github.io/review/videogame-tap-dig-my-museum/level_hu64f74bbabc863a7488cd82b6207ef236_101245_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;749&#34; height=&#34;1008&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;There is exactly one interesting wrinkle that shook up gameplay in what was otherwise an enjoyable but repetitive experience. Occasionally, while on a dig, I&amp;rsquo;d uncover a bone fragment that didn’t belong to the dinosaur I was excavating. These remained elusive until finding more across other dig sites, as &lt;em&gt;Tap! Dig! My Museum!&lt;/em&gt; began to drop subtle clues about where I could find others. I soon found myself flipping through the in-game dinosaur book with newfound importance, trying to track down mysterious new creatures. In those moments, even if it was in a cartoonish, silly kind of way, I felt like I was solving a pre-historic mystery. And, after all, that’s what this is all about.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Splashy Dots</title>
      <link>https://jdaymude.github.io/review/videogame-splashy-dots/</link>
      <pubDate>Fri, 02 Nov 2018 12:00:00 -0700</pubDate>
      <guid>https://jdaymude.github.io/review/videogame-splashy-dots/</guid>
      <description>&lt;p&gt;Creating an iOS puzzle game with minimalist design and the latest iOS features (3D Touch, Haptic, etc.) seems to be the surefire strategy for getting featured by Apple in the App Store in the late 2010s. But despite attaining that all-important medal of honor, &lt;em&gt;Splashy Dots&lt;/em&gt; serves, at best, a bland and lightly logical time-waster.&lt;/p&gt;
&lt;p&gt;At its core, &lt;em&gt;Splashy Dots&lt;/em&gt; is about connecting dots on a grid, starting and ending at specified locations without being allowed to backtrack. Its aesthetic is vaguely reminiscent of an art gallery, and connecting the colored dots is something like &amp;ldquo;paint through all the colors without lifting your paintbrush&amp;rdquo;. Except the colors don&amp;rsquo;t matter, and the &amp;ldquo;paintings&amp;rdquo; that comprise the levels never end up looking like anything nice (unless you really like abstract art, in which case, knock yourself out).&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jdaymude.github.io/review/videogame-splashy-dots/featured_huf8ddd504f1fd6f9554863764a44c44c0_729320_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://jdaymude.github.io/review/videogame-splashy-dots/featured_huf8ddd504f1fd6f9554863764a44c44c0_729320_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;745&#34; height=&#34;1068&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;It&amp;rsquo;s difficult not to compare &lt;em&gt;Splashy Dots&lt;/em&gt; to other casual puzzle games that are unequivocally richer experiences. Take &lt;em&gt;Dots&lt;/em&gt; and its excellent sequel &lt;em&gt;Two Dots&lt;/em&gt;, for example. &lt;em&gt;Splashy Dots&lt;/em&gt; seems to be a carbon copy when it comes to the &lt;em&gt;Dots&lt;/em&gt; games&amp;rsquo; minimalist designs, but replaces the innovative and progressively more difficult gameplay with an inane, repetitive experience. Or, if we want to focus more on the &amp;ldquo;art&amp;rdquo; aspect, consider any Picross game. Despite being quite repetitive, Picross stays engaging by promising the player that all the numbers and squares will eventually depict something. It&amp;rsquo;s a promise that the experience will be rewarding, even if that reward is just a pixelated happy face. &lt;em&gt;Splashy Dots&lt;/em&gt;, in turn, offers every combination of colored lines imaginable. And something about discovering hundreds of crappy paintings just isn&amp;rsquo;t a formula that keeps me coming back for more.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blendoku 2</title>
      <link>https://jdaymude.github.io/review/videogame-blendoku-2/</link>
      <pubDate>Sun, 17 Dec 2017 12:00:00 -0700</pubDate>
      <guid>https://jdaymude.github.io/review/videogame-blendoku-2/</guid>
      <description>&lt;p&gt;&lt;em&gt;Blendoku 2&lt;/em&gt; is an excellent example of a free, mobile puzzle game done right. Based on the deceptively simple concept of sorting colors, &lt;em&gt;Blendoku 2&lt;/em&gt; offers great depth of content and innovative mechanics to a mobile puzzle scene overrun by match-three spinoffs and their ilk.&lt;/p&gt;
&lt;p&gt;Gameplay is straightforward: a crossword-like board is presented with a small number of colored tiles already filled in. Players must then place the remaining colors into the correct spaces so that the resulting board follows some sort of color gradient. Variants on this basic formula include &amp;ldquo;Keyless&amp;rdquo;, where the original board has no preset tiles; &amp;ldquo;Decoys,&amp;rdquo; where some tiles are red herrings and not part of the end configuration, and &amp;ldquo;Clones,&amp;rdquo; where a color corresponds to multiple spaces on the board. Completionists can challenge themselves to beat levels faster than the world average time and do so perfectly, avoiding putting any colors in incorrect locations. Achievements accompany these feats and more (and all are possible without payment).&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jdaymude.github.io/review/videogame-blendoku-2/thanks_41_hu2af550c75d92bbda05ddca25a13227dd_7952_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://jdaymude.github.io/review/videogame-blendoku-2/thanks_41_hu2af550c75d92bbda05ddca25a13227dd_7952_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;745&#34; height=&#34;838&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;Levels are organized by difficulty. The base game, which is completely free, includes generous amounts of content: 150 &amp;ldquo;simple&amp;rdquo; levels, 150 &amp;ldquo;medium,&amp;rdquo; 100 &amp;ldquo;hard,&amp;rdquo; 100 &amp;ldquo;master,&amp;rdquo; and 50 bonus &amp;ldquo;thanks&amp;rdquo; levels. This was more than enough to provide a satisfying experience, and interested players can more than double the number of levels by purchasing level packs. Monetization, per usual, comes from ads played between levels.&lt;/p&gt;
&lt;p&gt;There are a variety of other game modes and perks to discover throughout the game, including a multiplayer versus mode, &amp;ldquo;painting&amp;rdquo; levels, a &amp;ldquo;color IQ&amp;rdquo; test, and a daily challenge level. These are all nice enough experiences, demonstrating the developers’ abilities to strike a near-perfect balance between providing abundant content and remaining focused on their core gameplay. As a result, &lt;em&gt;Blendoku 2&lt;/em&gt; feels full without trying to do too much.&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jdaymude.github.io/review/videogame-blendoku-2/painting_15_hu4beddca54a96b73bca0c1dc2c9d3133c_647481_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://jdaymude.github.io/review/videogame-blendoku-2/painting_15_hu4beddca54a96b73bca0c1dc2c9d3133c_647481_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;746&#34; height=&#34;1095&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;All in all, &lt;em&gt;Blendoku 2&lt;/em&gt;’s commitment to simplicity in design and mechanics combined with its plethora of free content makes it a must-try for puzzle lovers.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>We Were Here</title>
      <link>https://jdaymude.github.io/review/videogame-we-were-here/</link>
      <pubDate>Sun, 16 Jul 2017 12:00:00 -0700</pubDate>
      <guid>https://jdaymude.github.io/review/videogame-we-were-here/</guid>
      <description>&lt;p&gt;In this two-player, cooperative, escape-the-room-like adventure, players take the roles of the Librarian and the Explorer. The two begin the game stranded in an unspecified snowy region, and upon discovering and entering a foreboding castle, they are knocked out and placed in separate rooms, connected only by a pair of walkie-talkies. The Librarian is primarily responsible for supplying information to the Explorer, who in turn navigates deadly traps and dimly lit mazes to reach new areas. By piecing together visual clues from both players&amp;rsquo; environments, puzzles are solved cooperatively, opening doors to new challenges.&lt;/p&gt;
&lt;p&gt;For a free-to-play game, this was a surprisingly enjoyable and well-constructed experience (albeit a relatively short one, with an imperfect run taking roughly two hours). The crux of the gameplay rests on using voice-only communication to navigate inherently visual puzzles, which are fairly high-quality. Each puzzle balances complexity with difficulty in a pleasing way, and remains sufficiently independent of the rest, ensuring that each sequence is fresh and surprising. Even so, the overall experience was cohesive, rewarding attention to detail even when the details weren&amp;rsquo;t immediately relevant. Making the roles unique gives the game replay value as well; even though both players know the puzzle solutions after one successful run, switching roles gives a satisfying &amp;ldquo;ah, that&amp;rsquo;s what you were confused about!&amp;rdquo; kind of feeling.&lt;/p&gt;
&lt;p&gt;The graphics are lacking in polish, but this is hardly a complaint given the game is free. In some senses, the lower quality textures add to the experience; I don&amp;rsquo;t really like horror games, but the use of creepy atmospheric elements and the ever-present sense that my partner was in danger was enough to create the right amount of suspense.&lt;/p&gt;
&lt;p&gt;My real complaints are lodged against the bugs we encountered in our play-through, which (as of Update Five) required my Explorer to kill himself so we could restart from the checkpoint. This sort of broke the feeling of the overall experience, as death became a necessary means to an end instead of something worth fearing.&lt;/p&gt;
&lt;p&gt;Finally, as a matter of opinion and not of critique, I wonder if the story could have offered any more resolution than what was hinted at in the final theatre sequence. Who was the shadowy figure that placed us here? What drives it to such strange games of mind-over-matter? And what does it want with the one left behind?&lt;/p&gt;
&lt;h2 id=&#34;bugs&#34;&gt;Bugs&lt;/h2&gt;
&lt;p&gt;As of Update Five, the introductory video has audio buffering issues. The chess puzzle has a couple bugs: the librarian often drops the film reel for no reason, and it is possible to get the film reel to play its spinning animation on the table itself if the Explorer applies the power too early.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sputnik Eyes</title>
      <link>https://jdaymude.github.io/review/videogame-sputnik-eyes/</link>
      <pubDate>Wed, 13 Apr 2016 12:00:00 -0700</pubDate>
      <guid>https://jdaymude.github.io/review/videogame-sputnik-eyes/</guid>
      <description>&lt;p&gt;&lt;em&gt;Sputnik Eyes&lt;/em&gt; is a puzzle game adorned with a playful atmosphere in which you&amp;rsquo;re tasked with guiding exploratory colored robots to matching color positions in order to discover new planets. The aesthetic is greatly inspired by space exploration and the mathematical field of graph theory, which delivers enjoyable mechanics for mathy logic puzzles in minimalist artwork and easily understood controls. The UI is full of adorable artwork, reminiscent of cartoon depictions of outer space that might decorate a child&amp;rsquo;s bedroom. The soundtrack is similarly dreamy, leveraging a handful of light, instrumental electronic songs on rotation to keep any one from becoming overplayed.&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jdaymude.github.io/review/videogame-sputnik-eyes/level_hu4b4ff64bd98f5c51248ec04c7cd85531_222619_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://jdaymude.github.io/review/videogame-sputnik-eyes/level_hu4b4ff64bd98f5c51248ec04c7cd85531_222619_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;640&#34; height=&#34;1136&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;Although the levels vary in the layout of finishing positions and the number of robots, gameplay does have the potential to get somewhat repetitive, which I feel the game designer — Shelly Alon, who developed this game singlehandedly — was likely aware of. Completed levels form constellations (out of planets, not stars), and the game ends after just 65 planets — setting itself apart from content-vomiters like &lt;em&gt;Candy Crush&lt;/em&gt; — and doesn&amp;rsquo;t force players to replay levels extensively to achieve some unlikely high score. Instead, there are challenges to complete levels under a (generous) time limit, and to do so in the minimum possible number of robot moves, providing a shallow level of replayability for those who want it.&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://jdaymude.github.io/review/videogame-sputnik-eyes/constellation_huec79b848a40fbc6e180e238cf7544ebf_147126_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://jdaymude.github.io/review/videogame-sputnik-eyes/constellation_huec79b848a40fbc6e180e238cf7544ebf_147126_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;640&#34; height=&#34;1136&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;All in all, &lt;em&gt;Sputnik Eyes&lt;/em&gt; is a satisfying puzzle game resulting from heartfelt, thoughtful work that turns a hopeful eye to what lies beyond our atmosphere.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
